version: '3.5'

networks:
  default:

services:
  zookeeper:
     container_name: "zookeeper"
     image: docker.io/bitnami/zookeeper:3.8
     restart: always
     ports:
       - "2181:2181"
     volumes:
       - "zookeeper_data:/bitnami"
     environment:
       - ALLOW_ANONYMOUS_LOGIN=yes
     networks:
       default:
  kafka:
     container_name: "kafka"
     image: docker.io/bitnami/kafka:3.3
     restart: always
     ports:
       - "9092:9092"
     volumes:
       - "kafka_data:/bitnami"
     environment:
       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${HOSTNAME}:9092
       - KAFKA_ADVERTISED_HOST_NAME=${HOSTNAME}
       - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
       - ALLOW_PLAINTEXT_LISTENER=yes
     depends_on:
       - zookeeper
     networks:
       default:
     healthcheck:
       test: ["CMD", "sleep", "15"]
       start_period: 15s
       interval: 1s
       timeout: 60s
       retries: 30
  api:
    container_name: "api"
    build: 
      context: ./api
      dockerfile: Dockerfile
    image: fogallocator/api
    restart: always
    ports:
      - "8080:8000"
    volumes:
      - "./api/main.py:/main.py"
  solver:
    container_name: "solver"
    build: 
      context: ./solver
      dockerfile: Dockerfile
    image: fogallocator/solver
    restart: always
    volumes:
      - "./instances.json:/instances.json"
    healthcheck:
      test: ["CMD", "sleep", "20"]
      start_period: 20s
      interval: 1s
      timeout: 60s
      retries: 30 
volumes:
  zookeeper_data:
     driver: local
  kafka_data:
     driver: local
